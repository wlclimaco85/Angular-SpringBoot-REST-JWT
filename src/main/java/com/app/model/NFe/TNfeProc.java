//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.10.24 at 04:53:17 PM BRST 
//


package com.app.model.NFe;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 *  Tipo da NF-e processada
 * 
 * <p>Java class for TNfeProc complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TNfeProc">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="NFe" type="{http://www.portalfiscal.inf.br/nfe}TNFe"/>
 *         &lt;element name="protNFe" type="{http://www.portalfiscal.inf.br/nfe}TProtNFe"/>
 *       &lt;/sequence>
 *       &lt;attribute name="versao" use="required" type="{http://www.portalfiscal.inf.br/nfe}TVerNFe" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TNfeProc", propOrder = {
    "nFe",
    "protNFe"
})
@Entity(name = "TNfeProc")
@Table(name = "TNFEPROC")
@Inheritance(strategy = InheritanceType.JOINED)
public class TNfeProc
    implements Equals, HashCode
{

    @XmlElement(name = "NFe", required = true)
    protected TNFe nFe;
    @XmlElement(required = true)
    protected TProtNFe protNFe;
    @XmlAttribute(name = "versao", required = true)
    protected String versao;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the nFe property.
     * 
     * @return
     *     possible object is
     *     {@link TNFe }
     *     
     */
    @ManyToOne(targetEntity = TNFe.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NFE_TNFEPROC_HJID")
    public TNFe getNFe() {
        return nFe;
    }

    /**
     * Sets the value of the nFe property.
     * 
     * @param value
     *     allowed object is
     *     {@link TNFe }
     *     
     */
    public void setNFe(TNFe value) {
        this.nFe = value;
    }

    /**
     * Gets the value of the protNFe property.
     * 
     * @return
     *     possible object is
     *     {@link TProtNFe }
     *     
     */
    @ManyToOne(targetEntity = TProtNFe.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PROTNFE_TNFEPROC_HJID")
    public TProtNFe getProtNFe() {
        return protNFe;
    }

    /**
     * Sets the value of the protNFe property.
     * 
     * @param value
     *     allowed object is
     *     {@link TProtNFe }
     *     
     */
    public void setProtNFe(TProtNFe value) {
        this.protNFe = value;
    }

    /**
     * Gets the value of the versao property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "VERSAO", length = 255)
    public String getVersao() {
        return versao;
    }

    /**
     * Sets the value of the versao property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVersao(String value) {
        this.versao = value;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TNfeProc)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final TNfeProc that = ((TNfeProc) object);
        {
            TNFe lhsNFe;
            lhsNFe = this.getNFe();
            TNFe rhsNFe;
            rhsNFe = that.getNFe();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nFe", lhsNFe), LocatorUtils.property(thatLocator, "nFe", rhsNFe), lhsNFe, rhsNFe)) {
                return false;
            }
        }
        {
            TProtNFe lhsProtNFe;
            lhsProtNFe = this.getProtNFe();
            TProtNFe rhsProtNFe;
            rhsProtNFe = that.getProtNFe();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "protNFe", lhsProtNFe), LocatorUtils.property(thatLocator, "protNFe", rhsProtNFe), lhsProtNFe, rhsProtNFe)) {
                return false;
            }
        }
        {
            String lhsVersao;
            lhsVersao = this.getVersao();
            String rhsVersao;
            rhsVersao = that.getVersao();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "versao", lhsVersao), LocatorUtils.property(thatLocator, "versao", rhsVersao), lhsVersao, rhsVersao)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            TNFe theNFe;
            theNFe = this.getNFe();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nFe", theNFe), currentHashCode, theNFe);
        }
        {
            TProtNFe theProtNFe;
            theProtNFe = this.getProtNFe();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "protNFe", theProtNFe), currentHashCode, theProtNFe);
        }
        {
            String theVersao;
            theVersao = this.getVersao();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "versao", theVersao), currentHashCode, theVersao);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
